name: Build and Push Docker image to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build & Push Docker Image to AWS ECR
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image tag
        id: vars
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

      - name: Output image URI and tag it with latest
        run: | 
          echo "Pushed image to ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"
          MANIFEST=$(aws ecr batch-get-image --repository-name debian-nginx --image-ids imageTag=${{ env.IMAGE_TAG }} --query 'images[].imageManifest' --output text)
          aws ecr put-image --repository-name debian-nginx --image-tag latest --image-manifest "$MANIFEST"
         
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name my-cluster --region ${{ secrets.AWS_REGION }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Deploy to EKS with Helm
        run: |
          helm upgrade --install debian-nginx .helm-chart \
          --set image.repository=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }} \
          --set image.tag=latest \
          --namespace debian-nginx \
          --create-namespace
